apiVersion: v1
kind: ConfigMap
metadata:
  name: my-scheduler
  namespace: kube-system
data:
 policy.cfg : |
  {
  "kind" : "Policy",
  "apiVersion" : "v1",
  "predicates" : [
  	{"name" : "PodFitsHostPorts"},
  	{"name" : "PodFitsResources"},
  	{"name" : "NoDiskConflict"},
  	{"name" : "MatchNodeSelector"},
  	{"name" : "HostName"}
  	],
  "priorities" : [
  	{"name" : "LeastRequestedPriority", "weight" : 1},
  	{"name" : "BalancedResourceAllocation", "weight" : 1},
  	{"name" : "ServiceSpreadingPriority", "weight" : 1},
  	{"name" : "EqualPriority", "weight" : 1}
  	],
  "extenders" : [
  	{
          "urlPrefix": "http://localhost/scheduler",
          "apiVersion": "v1beta1",
          "filterVerb": "predicates/always_true",
          "bindVerb": "",
          "prioritizeVerb": "priorities/zero_score",
          "weight": 1,
          "enableHttps": false,
          "nodeCacheCapable": false
  	}
      ],
  "hardPodAffinitySymmetricWeight" : 10
  }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-scheduler
  namespace: kube-system
  labels:
    app: my-scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-scheduler
  template:
    metadata:
      labels:
        app: my-scheduler
    spec:
      containers:
      - name: my-scheduler-ctr
        image: gcr.io/google_containers/hyperkube:v1.9.0
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - |
          /hyperkube kube-scheduler \
            --address 0.0.0.0 \
            --scheduler-name my-scheduler \
            --policy-configmap-namespace kube-system \
            --policy-configmap my-scheduler \
            --lock-object-namespace kube-system \
            --lock-object-name my-scheduler \
            -v=4
      - name: my-scheduler-extender-ctr
        image: a/b:c
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /version
            port: 80
        readinessProbe:
          httpGet:
            path: /version
            port: 80
        ports:
          - containerPort: 80
